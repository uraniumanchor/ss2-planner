{"version":3,"sources":["store/slices/Breakpoints.ts","views/Breakpoints.tsx","constants/PsiAbilityNames.ts","constants/Difficulty.ts","constants/PsiTierCosts.ts","store/slices/PsiTiers.ts","constants/PsiAbilityCosts.ts","views/PsiGrid.tsx","store/slices/Difficulty.ts","views/Difficulty.tsx","constants/StatCosts.ts","constants/Stats.ts","constants/WeaponCosts.ts","constants/TechCosts.ts","views/Total.tsx","store/slices/Stats.ts","constants/Weapons.ts","views/Stats.tsx","store/slices/Weapons.ts","constants/Techs.ts","views/Weapons.tsx","store/slices/Techs.ts","views/Techs.tsx","App.tsx","serviceWorker.ts","store/Store.ts","index.tsx"],"names":["s","a","b","Breakpoints","createSlice","name","initialState","reducers","add","state","action","includes","payload","concat","sort","remove","filter","breakpoints","useSelector","dispatch","useDispatch","useState","breakpointToAdd","setBreakpointToAdd","map","key","onClick","Slice","actions","value","onChange","e","target","type","Difficulty","PsiAbilityNames","PsiTierCosts","EASY","NORMAL","HARD","IMPOSSIBLE","PsiTiers","Array","length","fill","enabled","abilities","activateTier","deactivateTier","activateAbility","tier","findIndex","Error","push","deactivateAbility","PsiAbilityCosts","PsiGrid","tiers","difficulty","i","disabled","Values","setDifficulty","Object","entries","k","v","Stats","StatCosts","WeaponCosts","TechCosts","Total","stats","weapons","techs","total","useMemo","reduce","values","stat","slice","t","c","weapon","tech","Weapons","STRENGTH","ENDURANCE","PSIONICS","AGILITY","CYBER","setStat","Math","floor","max","min","StatLine","style","gridColumn","display","Techs","STANDARD","ENERGY","HEAVY","EXOTIC","setWeapon","WeaponLine","HACKING","REPAIR","MODIFY","MAINTENANCE","RESEARCH","setTech","TechLine","App","Boolean","window","location","hostname","match","reducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2504677c.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nfunction s(a: number, b: number) {\n  return a - b;\n}\n\nexport const Breakpoints = createSlice({\n  name: 'Breakpoints',\n  initialState: [] as number[],\n  reducers: {\n    add: (state, action: PayloadAction<number>) =>\n      state.includes(action.payload) ? state : state.concat(action.payload).sort(s),\n    remove: (state, action: PayloadAction<number>) => state.filter((b) => b !== action.payload),\n  },\n});\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { StoreState } from '../store/Store';\nimport { Breakpoints as Slice } from '../store/slices/Breakpoints';\n\nexport function Breakpoints() {\n  const breakpoints = useSelector((state: StoreState) => state.breakpoints);\n  const dispatch = useDispatch();\n  const [breakpointToAdd, setBreakpointToAdd] = useState(0);\n  return (\n    <>\n      <h2>Breakpoints</h2>\n      {breakpoints.map((b) => (\n        <div key={b}>\n          {b}\n          <button onClick={() => dispatch(Slice.actions.remove(b))}>-</button>\n        </div>\n      ))}\n      <input value={breakpointToAdd} onChange={(e) => setBreakpointToAdd(+e.target.value)} type='number' />\n      <button onClick={() => dispatch(Slice.actions.add(breakpointToAdd))}>Add</button>\n    </>\n  );\n}\n","export const PsiAbilityNames = [\n  [\n    'Psycho-Reflective Screen',\n    'Neuro-Reflex Dampening',\n    'Kinetic Redirection',\n    'Psychogenic Agility',\n    'Psychogenic Cyber Affinity',\n    'Projected Cryokinesis',\n    'Remote Electron Tampering',\n  ],\n  [\n    'Anti-Entropic Field',\n    'Adrenaline Overproduction',\n    'Neural Decontamination',\n    'Cerebro-Stimulated Regeneration',\n    'Psychogenic Strength',\n    'Recursive Psionic Amplification',\n    'Localized Pyrokinesis',\n  ],\n  [\n    'Molecular Duplication',\n    'Electron Cascade',\n    'Energy Reflection',\n    'Neural Toxin-Blocker',\n    'Enhanced Motion Sensitivity',\n    'Projected Pyrokinesis',\n    'Psionic Hypnogenesis',\n  ],\n  [\n    'Photonic Redirection',\n    'Remote Pattern Detection',\n    'Electron Suppression',\n    'Psychogenic Endurance',\n    'Molecular Transmutation',\n    'Remote Circuitry Manipulation',\n    'Cerebro-Energetic Extension',\n  ],\n  [\n    'Advanced Cerebro-Stimulated Regeneration',\n    'Soma Transference',\n    'Instantaneous Quantum Relocation',\n    'Imposed Neural Restructuring',\n    'Metacreative Barrier',\n    'External Psionic Detonation',\n    'Psycho-Reflective Aura',\n  ],\n];\n","export enum Difficulty {\n  EASY = 'Easy',\n  NORMAL = 'Normal',\n  HARD = 'Hard',\n  IMPOSSIBLE = 'Impossible',\n}\n","import { Difficulty } from './Difficulty';\n\nexport const PsiTierCosts = {\n  [Difficulty.EASY]: [8, 17, 25, 42, 63],\n  [Difficulty.NORMAL]: [10, 20, 30, 50, 75],\n  [Difficulty.HARD]: [13, 27, 41, 69, 104],\n  [Difficulty.IMPOSSIBLE]: [17, 35, 53, 89, 134],\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { PsiTierCosts } from '../../constants/PsiTierCosts';\nimport { Difficulty } from '../../constants/Difficulty';\nimport { PsiAbilityNames } from '../../constants/PsiAbilityNames';\n\ninterface Tier {\n  enabled: boolean;\n  abilities: string[];\n}\n\nexport const PsiTiers = createSlice({\n  name: 'PsiTiers',\n  initialState: new Array<Tier>(PsiTierCosts[Difficulty.EASY].length).fill({\n    enabled: false,\n    abilities: [],\n  }) as Tier[],\n  reducers: {\n    activateTier: (state, { payload }: PayloadAction<number>) => {\n      state[payload].enabled = true;\n    },\n    deactivateTier: (state, { payload }: PayloadAction<number>) => {\n      state[payload].enabled = false;\n      state[payload].abilities = [];\n    },\n    activateAbility: (state, { payload }: PayloadAction<string>) => {\n      const tier = PsiAbilityNames.findIndex((tier) => tier.includes(payload));\n      if (tier === -1) {\n        throw new Error(`could not find ability named \"${payload}`);\n      }\n      if (state[tier].enabled && !state[tier].abilities.includes(payload)) {\n        state[tier].abilities.push(payload);\n      }\n    },\n    deactivateAbility: (state, { payload }: PayloadAction<string>) => {\n      const tier = PsiAbilityNames.findIndex((tier) => tier.includes(payload));\n      if (tier === -1) {\n        throw new Error(`could not find ability named \"${payload}`);\n      }\n      state[tier].abilities = state[tier].abilities.filter((a) => a !== payload);\n    },\n  },\n});\n","import { Difficulty } from './Difficulty';\n\nexport const PsiAbilityCosts = {\n  [Difficulty.EASY]: [2, 4, 6, 10, 17],\n  [Difficulty.NORMAL]: [3, 5, 8, 12, 20],\n  [Difficulty.HARD]: [4, 6, 11, 16, 27],\n  [Difficulty.IMPOSSIBLE]: [5, 8, 14, 21, 35],\n};\n","import { PsiAbilityNames } from '../constants/PsiAbilityNames';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { StoreState } from '../store/Store';\nimport { PsiTiers } from '../store/slices/PsiTiers';\nimport { PsiTierCosts } from '../constants/PsiTierCosts';\nimport { PsiAbilityCosts } from '../constants/PsiAbilityCosts';\n\nexport function PsiGrid() {\n  const tiers = useSelector((state: StoreState) => state.tiers);\n  const difficulty = useSelector((state: StoreState) => state.difficulty);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      {tiers.map((tier, i) => (\n        <div key={i}>\n          <h2>Tier {i + 1}</h2>\n          <div>\n            <label>\n              {tier.enabled ? (\n                <button onClick={() => dispatch(PsiTiers.actions.deactivateTier(i))}>Disable</button>\n              ) : (\n                <button onClick={() => dispatch(PsiTiers.actions.activateTier(i))}>Enable</button>\n              )}\n              {PsiTierCosts[difficulty][i]}\n            </label>\n          </div>\n          {PsiAbilityNames[i].map((name) => (\n            <div key={name}>\n              {name}\n              <label>\n                {tier.abilities.includes(name) ? (\n                  <button onClick={() => dispatch(PsiTiers.actions.deactivateAbility(name))}>Disable</button>\n                ) : (\n                  <button disabled={!tier.enabled} onClick={() => dispatch(PsiTiers.actions.activateAbility(name))}>\n                    Enable\n                  </button>\n                )}\n                {PsiAbilityCosts[difficulty][i]}\n              </label>\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Difficulty as Values } from '../../constants/Difficulty';\n\nexport const Difficulty = createSlice({\n  name: 'Difficulty',\n  initialState: Values.NORMAL,\n  reducers: {\n    setDifficulty: (state, { payload }: PayloadAction<Values>) => payload,\n  },\n});\n","import { useDispatch, useSelector } from 'react-redux';\nimport { StoreState } from '../store/Store';\nimport React from 'react';\nimport { Difficulty as Values } from '../constants/Difficulty';\nimport { Difficulty as Slice } from '../store/slices/Difficulty';\n\nexport function Difficulty() {\n  const difficulty = useSelector((state: StoreState) => state.difficulty);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      {difficulty}\n      {Object.entries(Values).map(([k, v]) => (\n        <button key={k} onClick={() => dispatch(Slice.actions.setDifficulty(v))}>\n          {v}\n        </button>\n      ))}\n    </div>\n  );\n}\n","import { Difficulty } from './Difficulty';\n\nexport const StatCosts = {\n  [Difficulty.EASY]: [2, 6, 12, 25, 42],\n  [Difficulty.NORMAL]: [3, 8, 15, 30, 50],\n  [Difficulty.HARD]: [4, 11, 20, 41, 69],\n  [Difficulty.IMPOSSIBLE]: [5, 14, 26, 53, 89],\n};\n","export enum Stats {\n  STRENGTH = 'Strength',\n  ENDURANCE = 'Endurance',\n  PSIONICS = 'Psionics',\n  AGILITY = 'Agility',\n  CYBER = 'Cybernetic Affinity',\n}\n","import { Difficulty } from './Difficulty';\n\nexport const WeaponCosts = {\n  [Difficulty.EASY]: [10, 5, 6, 12, 30, 42],\n  [Difficulty.NORMAL]: [12, 6, 8, 15, 36, 50],\n  [Difficulty.HARD]: [16, 8, 11, 20, 50, 69],\n  [Difficulty.IMPOSSIBLE]: [21, 10, 14, 26, 64, 89],\n};\n","import { Difficulty } from './Difficulty';\n\nexport const TechCosts = {\n  [Difficulty.EASY]: [8, 4, 6, 10, 21, 42],\n  [Difficulty.NORMAL]: [10, 5, 8, 12, 25, 50],\n  [Difficulty.HARD]: [13, 6, 11, 16, 34, 69],\n  [Difficulty.IMPOSSIBLE]: [17, 8, 14, 21, 44, 89],\n};\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { StoreState } from '../store/Store';\nimport { PsiTierCosts } from '../constants/PsiTierCosts';\nimport { PsiAbilityCosts } from '../constants/PsiAbilityCosts';\nimport { StatCosts } from '../constants/StatCosts';\nimport { WeaponCosts } from '../constants/WeaponCosts';\nimport { TechCosts } from '../constants/TechCosts';\n\nexport function Total() {\n  const difficulty = useSelector((state: StoreState) => state.difficulty);\n  const stats = useSelector((state: StoreState) => state.stats);\n  const weapons = useSelector((state: StoreState) => state.weapons);\n  const tiers = useSelector((state: StoreState) => state.tiers);\n  const techs = useSelector((state: StoreState) => state.techs);\n  const total = useMemo(() => {\n    return (\n      tiers.reduce(\n        (total, tier, i) =>\n          total +\n          (tier.enabled ? PsiTierCosts[difficulty][i] : 0) +\n          tier.abilities.length * PsiAbilityCosts[difficulty][i],\n        0\n      ) +\n      Object.values(stats).reduce((total, stat) => {\n        return total + StatCosts[difficulty].slice(0, stat - 1).reduce((t, c) => t + c, 0);\n      }, 0) +\n      Object.values(weapons).reduce((total, weapon) => {\n        return total + WeaponCosts[difficulty].slice(0, weapon).reduce((t, c) => t + c, 0);\n      }, 0) +\n      Object.values(techs).reduce((total, tech) => {\n        return total + TechCosts[difficulty].slice(0, tech).reduce((t, c) => t + c, 0);\n      }, 0)\n    );\n  }, [tiers, difficulty, stats, weapons, techs]);\n  return <div>{total}</div>;\n}\n","import { Stats as Values } from '../../constants/Stats';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport const Stats = createSlice({\n  name: 'Stats',\n  initialState: {\n    [Values.STRENGTH]: 1,\n    [Values.ENDURANCE]: 1,\n    [Values.PSIONICS]: 1,\n    [Values.AGILITY]: 1,\n    [Values.CYBER]: 1,\n  },\n  reducers: {\n    setStat: (state, { payload: { stat, value } }: PayloadAction<{ stat: Values; value: number }>) => {\n      state[stat] = Math.floor(Math.max(1, Math.min(6, value)));\n    },\n  },\n});\n","export enum Weapons {\n  STANDARD = 'Standard',\n  ENERGY = 'Energy',\n  HEAVY = 'Heavy',\n  EXOTIC = 'Exotic',\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { StoreState } from '../store/Store';\nimport React from 'react';\nimport { Stats as Values } from '../constants/Stats';\nimport { Stats as Slice } from '../store/slices/Stats';\nimport { StatCosts } from '../constants/StatCosts';\n\nexport function StatLine({ stat, value }: { stat: Values; value: number }) {\n  const dispatch = useDispatch();\n  const difficulty = useSelector((state: StoreState) => state.difficulty);\n  return (\n    <>\n      <span style={{ gridColumn: 1 }}>{stat}</span>\n      <span style={{ gridColumn: 2 }}>\n        <input\n          value={value}\n          min={1}\n          max={6}\n          type='number'\n          onChange={(e) => dispatch(Slice.actions.setStat({ stat, value: +e.target.value }))}\n        />\n      </span>\n      <span style={{ gridColumn: 3 }}>{value !== 6 ? StatCosts[difficulty][value - 1] : 'max'}</span>\n    </>\n  );\n}\n\nexport function Stats() {\n  const stats = useSelector((state: StoreState) => state.stats);\n  return (\n    <div style={{ display: 'grid' }}>\n      <h2>Stats</h2>\n      <span style={{ gridColumn: 1 }}>Skill</span>\n      <span style={{ gridColumn: 2 }}>Level</span>\n      <span style={{ gridColumn: 3 }}>Cost</span>\n      <StatLine stat={Values.STRENGTH} value={stats[Values.STRENGTH]} />\n      <StatLine stat={Values.ENDURANCE} value={stats[Values.ENDURANCE]} />\n      <StatLine stat={Values.PSIONICS} value={stats[Values.PSIONICS]} />\n      <StatLine stat={Values.AGILITY} value={stats[Values.AGILITY]} />\n      <StatLine stat={Values.CYBER} value={stats[Values.CYBER]} />\n    </div>\n  );\n}\n","import { Weapons as Values } from '../../constants/Weapons';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport const Weapons = createSlice({\n  name: 'Weapons',\n  initialState: {\n    [Values.STANDARD]: 0,\n    [Values.ENERGY]: 0,\n    [Values.HEAVY]: 0,\n    [Values.EXOTIC]: 0,\n  },\n  reducers: {\n    setWeapon: (state, { payload: { weapon, value } }: PayloadAction<{ weapon: Values; value: number }>) => {\n      state[weapon] = Math.floor(Math.max(0, Math.min(6, value)));\n    },\n  },\n});\n","export enum Techs {\n  HACKING = 'Hacking',\n  REPAIR = 'Repair',\n  MODIFY = 'Modify',\n  MAINTENANCE = 'Maintenance',\n  RESEARCH = 'Research',\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { StoreState } from '../store/Store';\nimport React from 'react';\nimport { Weapons as Values } from '../constants/Weapons';\nimport { Weapons as Slice } from '../store/slices/Weapons';\nimport { WeaponCosts } from '../constants/WeaponCosts';\n\nexport function WeaponLine({ weapon, value }: { weapon: Values; value: number }) {\n  const dispatch = useDispatch();\n  const difficulty = useSelector((state: StoreState) => state.difficulty);\n  return (\n    <>\n      <span style={{ gridColumn: 1 }}>{weapon}</span>\n      <span style={{ gridColumn: 2 }}>\n        <input\n          value={value}\n          min={0}\n          max={6}\n          type='number'\n          onChange={(e) => dispatch(Slice.actions.setWeapon({ weapon, value: +e.target.value }))}\n        />\n      </span>\n      <span style={{ gridColumn: 3 }}>{value !== 6 ? WeaponCosts[difficulty][value] : 'max'}</span>\n    </>\n  );\n}\n\nexport function Weapons() {\n  const weapons = useSelector((state: StoreState) => state.weapons);\n  return (\n    <div style={{ display: 'grid' }}>\n      <h2>Weapons</h2>\n      <span style={{ gridColumn: 1 }}>Skill</span>\n      <span style={{ gridColumn: 2 }}>Level</span>\n      <span style={{ gridColumn: 3 }}>Cost</span>\n      <WeaponLine weapon={Values.STANDARD} value={weapons[Values.STANDARD]} />\n      <WeaponLine weapon={Values.ENERGY} value={weapons[Values.ENERGY]} />\n      <WeaponLine weapon={Values.HEAVY} value={weapons[Values.HEAVY]} />\n      <WeaponLine weapon={Values.EXOTIC} value={weapons[Values.EXOTIC]} />\n    </div>\n  );\n}\n","import { Techs as Values } from '../../constants/Techs';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport const Techs = createSlice({\n  name: 'Techs',\n  initialState: {\n    [Values.HACKING]: 0,\n    [Values.REPAIR]: 0,\n    [Values.MODIFY]: 0,\n    [Values.MAINTENANCE]: 0,\n    [Values.RESEARCH]: 0,\n  },\n  reducers: {\n    setTech: (state, { payload: { tech, value } }: PayloadAction<{ tech: Values; value: number }>) => {\n      state[tech] = Math.floor(Math.max(0, Math.min(6, value)));\n    },\n  },\n});\n","import { useDispatch, useSelector } from 'react-redux';\nimport { StoreState } from '../store/Store';\nimport React from 'react';\nimport { Techs as Values } from '../constants/Techs';\nimport { Techs as Slice } from '../store/slices/Techs';\nimport { TechCosts } from '../constants/TechCosts';\n\nexport function TechLine({ tech, value }: { tech: Values; value: number }) {\n  const dispatch = useDispatch();\n  const difficulty = useSelector((state: StoreState) => state.difficulty);\n  return (\n    <>\n      <span style={{ gridColumn: 1 }}>{tech}</span>\n      <span style={{ gridColumn: 2 }}>\n        <input\n          value={value}\n          min={0}\n          max={6}\n          type='number'\n          onChange={(e) => dispatch(Slice.actions.setTech({ tech: tech, value: +e.target.value }))}\n        />\n      </span>\n      <span style={{ gridColumn: 3 }}>{value !== 6 ? TechCosts[difficulty][value] : 'max'}</span>\n    </>\n  );\n}\n\nexport function Techs() {\n  const techs = useSelector((state: StoreState) => state.techs);\n  return (\n    <div style={{ display: 'grid' }}>\n      <h2>Techs</h2>\n      <span style={{ gridColumn: 1 }}>Skill</span>\n      <span style={{ gridColumn: 2 }}>Level</span>\n      <span style={{ gridColumn: 3 }}>Cost</span>\n      <TechLine tech={Values.HACKING} value={techs[Values.HACKING]} />\n      <TechLine tech={Values.REPAIR} value={techs[Values.REPAIR]} />\n      <TechLine tech={Values.MODIFY} value={techs[Values.MODIFY]} />\n      <TechLine tech={Values.MAINTENANCE} value={techs[Values.MAINTENANCE]} />\n      <TechLine tech={Values.RESEARCH} value={techs[Values.RESEARCH]} />\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport { Breakpoints } from './views/Breakpoints';\nimport { PsiGrid } from './views/PsiGrid';\nimport { Difficulty } from './views/Difficulty';\nimport { Total } from './views/Total';\nimport { Stats } from './views/Stats';\nimport { Weapons } from './views/Weapons';\nimport { Techs } from './views/Techs';\n\nfunction App() {\n  return (\n    <div>\n      <Total />\n      <Difficulty />\n      <Stats />\n      <Weapons />\n      <Techs />\n      <PsiGrid />\n      <Breakpoints />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers } from 'redux';\nimport { Breakpoints } from './slices/Breakpoints';\nimport { PsiTiers } from './slices/PsiTiers';\nimport { Difficulty } from './slices/Difficulty';\nimport { Stats } from './slices/Stats';\nimport { Weapons } from './slices/Weapons';\nimport { Techs } from './slices/Techs';\n\nconst reducer = combineReducers({\n  breakpoints: Breakpoints.reducer,\n  tiers: PsiTiers.reducer,\n  difficulty: Difficulty.reducer,\n  stats: Stats.reducer,\n  weapons: Weapons.reducer,\n  techs: Techs.reducer,\n});\n\nexport const store = createStore(reducer);\n\nexport type StoreState = ReturnType<typeof store.getState>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store/Store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}