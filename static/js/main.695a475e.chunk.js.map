{"version":3,"sources":["constants/Difficulty.ts","constants/PsiAbilityNames.ts","constants/PsiTierCosts.ts","store/slices/PsiTiers.ts","constants/PsiAbilityCosts.ts","views/PsiGrid.tsx","store/slices/Difficulty.ts","views/Difficulty.tsx","constants/StatCosts.ts","constants/Jobs.ts","constants/WeaponCosts.ts","constants/TechCosts.ts","constants/Weapons.ts","constants/Stats.ts","constants/Techs.ts","lib/JobTraitGroups.ts","views/Total.tsx","store/slices/Stats.ts","views/Stats.tsx","store/slices/Weapons.ts","views/Weapons.tsx","store/slices/Techs.ts","views/Techs.tsx","store/slices/JobTraits.ts","views/Jobs.tsx","App.tsx","serviceWorker.ts","store/slices/Breakpoints.ts","store/Store.ts","index.tsx"],"names":["Difficulty","PsiAbilityNames","PsiTierCosts","EASY","NORMAL","HARD","IMPOSSIBLE","PsiTiers","createSlice","name","initialState","Array","length","fill","enabled","abilities","reducers","activateTier","state","payload","deactivateTier","activateAbility","tier","findIndex","includes","Error","push","deactivateAbility","filter","a","PsiAbilityCosts","PsiGrid","tiers","useSelector","difficulty","dispatch","useDispatch","style","display","alignItems","justifyContent","gridTemplateColumns","gap","margin","map","i","key","type","checked","onChange","e","target","actions","Fragment","disabled","Values","setDifficulty","Slice","value","defaultValue","Object","entries","k","v","Jobs","StatCosts","WeaponCosts","TechCosts","Weapons","Stats","Techs","addAbility","ability","JobTraitGroups","MARINE","label","stateMod","produce","draftState","weapons","STANDARD","Math","max","costMod","stats","STRENGTH","ENDURANCE","AGILITY","CYBER","ENERGY","HEAVY","techs","MAINTENANCE","MODIFY","REPAIR","NAVY","HACKING","RESEARCH","OSA","PSIONICS","Total","jobTraits","discount","useMemo","traits","reduce","total","traitLabel","trait","job","find","console","warn","psiCosts","statCosts","values","stat","slice","t","c","weaponCosts","weapon","techCosts","tech","setStat","floor","min","StatLine","gridColumn","EXOTIC","setWeapon","WeaponLine","setTech","TechLine","InitialState","JobTraits","setJob","setTrait","year","choice","App","Boolean","window","location","hostname","match","s","b","Breakpoints","add","action","concat","sort","remove","reducer","combineReducers","breakpoints","store","createStore","serializedState","localStorage","getItem","JSON","parse","err","loadState","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.695a475e.chunk.js","sourcesContent":["export enum Difficulty {\n  EASY = 'Easy',\n  NORMAL = 'Normal',\n  HARD = 'Hard',\n  IMPOSSIBLE = 'Impossible',\n}\n","export const PsiAbilityNames = [\n  [\n    'Psycho-Reflective Screen',\n    'Neuro-Reflex Dampening',\n    'Kinetic Redirection',\n    'Psychogenic Agility',\n    'Psychogenic Cyber Affinity',\n    'Projected Cryokinesis',\n    'Remote Electron Tampering',\n  ],\n  [\n    'Anti-Entropic Field',\n    'Adrenaline Overproduction',\n    'Neural Decontamination',\n    'Cerebro-Stimulated Regeneration',\n    'Psychogenic Strength',\n    'Recursive Psionic Amplification',\n    'Localized Pyrokinesis',\n  ],\n  [\n    'Molecular Duplication',\n    'Electron Cascade',\n    'Energy Reflection',\n    'Neural Toxin-Blocker',\n    'Enhanced Motion Sensitivity',\n    'Projected Pyrokinesis',\n    'Psionic Hypnogenesis',\n  ],\n  [\n    'Photonic Redirection',\n    'Remote Pattern Detection',\n    'Electron Suppression',\n    'Psychogenic Endurance',\n    'Molecular Transmutation',\n    'Remote Circuitry Manipulation',\n    'Cerebro-Energetic Extension',\n  ],\n  [\n    'Advanced Cerebro-Stimulated Regeneration',\n    'Soma Transference',\n    'Instantaneous Quantum Relocation',\n    'Imposed Neural Restructuring',\n    'Metacreative Barrier',\n    'External Psionic Detonation',\n    'Psycho-Reflective Aura',\n  ],\n];\n","import { Difficulty } from './Difficulty';\n\nexport const PsiTierCosts = {\n  [Difficulty.EASY]: [8, 17, 25, 42, 63],\n  [Difficulty.NORMAL]: [10, 20, 30, 50, 75],\n  [Difficulty.HARD]: [13, 27, 41, 69, 104],\n  [Difficulty.IMPOSSIBLE]: [17, 35, 53, 89, 134],\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { PsiTierCosts } from '../../constants/PsiTierCosts';\nimport { Difficulty } from '../../constants/Difficulty';\nimport { PsiAbilityNames } from '../../constants/PsiAbilityNames';\n\ninterface Tier {\n  enabled: boolean;\n  abilities: string[];\n}\n\nexport const PsiTiers = createSlice({\n  name: 'PsiTiers',\n  initialState: new Array<Tier>(PsiTierCosts[Difficulty.EASY].length).fill({\n    enabled: false,\n    abilities: [],\n  }) as Tier[],\n  reducers: {\n    activateTier: (state, { payload }: PayloadAction<number>) => {\n      state[payload].enabled = true;\n    },\n    deactivateTier: (state, { payload }: PayloadAction<number>) => {\n      state[payload].enabled = false;\n      state[payload].abilities = [];\n    },\n    activateAbility: (state, { payload }: PayloadAction<string>) => {\n      const tier = PsiAbilityNames.findIndex((tier) => tier.includes(payload));\n      if (tier === -1) {\n        throw new Error(`could not find ability named \"${payload}`);\n      }\n      if (!state[tier].abilities.includes(payload)) {\n        state[tier].abilities.push(payload);\n      }\n    },\n    deactivateAbility: (state, { payload }: PayloadAction<string>) => {\n      const tier = PsiAbilityNames.findIndex((tier) => tier.includes(payload));\n      if (tier === -1) {\n        throw new Error(`could not find ability named \"${payload}`);\n      }\n      state[tier].abilities = state[tier].abilities.filter((a) => a !== payload);\n    },\n  },\n});\n","import { Difficulty } from './Difficulty';\n\nexport const PsiAbilityCosts = {\n  [Difficulty.EASY]: [2, 4, 6, 10, 17],\n  [Difficulty.NORMAL]: [3, 5, 8, 12, 20],\n  [Difficulty.HARD]: [4, 6, 11, 16, 27],\n  [Difficulty.IMPOSSIBLE]: [5, 8, 14, 21, 35],\n};\n","import { PsiAbilityNames } from '../constants/PsiAbilityNames';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { StoreState } from '../store/Store';\nimport { PsiTiers } from '../store/slices/PsiTiers';\nimport { PsiTierCosts } from '../constants/PsiTierCosts';\nimport { PsiAbilityCosts } from '../constants/PsiAbilityCosts';\n\nexport function PsiGrid() {\n  const tiers = useSelector((state: StoreState) => state.tiers);\n  const difficulty = useSelector((state: StoreState) => state.difficulty);\n  const dispatch = useDispatch();\n  return (\n    <div\n      style={{\n        display: 'grid',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        gridTemplateColumns: 'repeat(5, 1fr)',\n        gap: 12,\n        margin: '0 12px',\n      }}\n    >\n      {tiers.map((tier, i) => (\n        <div\n          key={i}\n          style={{\n            display: 'grid',\n            alignItems: 'center',\n            justifyContent: 'space-around',\n            gridTemplateColumns: '8fr 2fr 1fr',\n            gap: 4,\n          }}\n        >\n          <span>\n            <h2>Tier {i + 1}</h2>\n          </span>\n          <span>\n            <input\n              type='checkbox'\n              checked={tier.enabled}\n              onChange={(e) =>\n                dispatch(e.target.checked ? PsiTiers.actions.activateTier(i) : PsiTiers.actions.deactivateTier(i))\n              }\n            />\n          </span>\n          <span>{PsiTierCosts[difficulty][i]}</span>\n          <span>Name</span>\n          <span>Active</span>\n          <span>Cost</span>\n          {PsiAbilityNames[i].map((name) => (\n            <React.Fragment key={name}>\n              <span>{name}</span>\n              <span>\n                {' '}\n                <input\n                  type={'checkbox'}\n                  checked={tier.abilities.includes(name)}\n                  disabled={!tier.enabled}\n                  onChange={(e) =>\n                    dispatch(\n                      e.target.checked\n                        ? PsiTiers.actions.activateAbility(name)\n                        : PsiTiers.actions.deactivateAbility(name)\n                    )\n                  }\n                />\n              </span>\n              <span> {PsiAbilityCosts[difficulty][i]}</span>\n            </React.Fragment>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Difficulty as Values } from '../../constants/Difficulty';\n\nexport const Difficulty = createSlice({\n  name: 'Difficulty',\n  initialState: Values.NORMAL,\n  reducers: {\n    setDifficulty: (state, { payload }: PayloadAction<Values>) => payload,\n  },\n});\n","import { useDispatch, useSelector } from 'react-redux';\nimport { StoreState } from '../store/Store';\nimport React from 'react';\nimport { Difficulty as Values } from '../constants/Difficulty';\nimport { Difficulty as Slice } from '../store/slices/Difficulty';\n\nexport function Difficulty() {\n  const difficulty = useSelector((state: StoreState) => state.difficulty);\n  const dispatch = useDispatch();\n\n  return (\n    <div\n      style={{\n        display: 'grid',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        gridTemplateColumns: '2fr 1fr',\n        gap: 4,\n      }}\n    >\n      <span>\n        <h2>Difficulty</h2>\n      </span>\n      <span>\n        <select\n          onChange={(e) => dispatch(Slice.actions.setDifficulty(e.target.value as Values))}\n          defaultValue={difficulty}\n        >\n          {Object.entries(Values).map(([k, v]) => (\n            <option key={k} value={v}>\n              {v}\n            </option>\n          ))}\n        </select>\n      </span>\n    </div>\n  );\n}\n","import { Difficulty } from './Difficulty';\n\nexport const StatCosts = {\n  [Difficulty.EASY]: [2, 6, 12, 25, 42],\n  [Difficulty.NORMAL]: [3, 8, 15, 30, 50],\n  [Difficulty.HARD]: [4, 11, 20, 41, 69],\n  [Difficulty.IMPOSSIBLE]: [5, 14, 26, 53, 89],\n};\n","export enum Jobs {\n  MARINE = 'Marine',\n  NAVY = 'Navy',\n  OSA = 'O.S.A.',\n}\n","import { Difficulty } from './Difficulty';\n\nexport const WeaponCosts = {\n  [Difficulty.EASY]: [10, 5, 6, 12, 30, 42],\n  [Difficulty.NORMAL]: [12, 6, 8, 15, 36, 50],\n  [Difficulty.HARD]: [16, 8, 11, 20, 50, 69],\n  [Difficulty.IMPOSSIBLE]: [21, 10, 14, 26, 64, 89],\n};\n","import { Difficulty } from './Difficulty';\n\nexport const TechCosts = {\n  [Difficulty.EASY]: [8, 4, 6, 10, 21, 42],\n  [Difficulty.NORMAL]: [10, 5, 8, 12, 25, 50],\n  [Difficulty.HARD]: [13, 6, 11, 16, 34, 69],\n  [Difficulty.IMPOSSIBLE]: [17, 8, 14, 21, 44, 89],\n};\n","export enum Weapons {\n  STANDARD = 'Standard',\n  ENERGY = 'Energy',\n  HEAVY = 'Heavy',\n  EXOTIC = 'Exotic',\n}\n","export enum Stats {\n  STRENGTH = 'Strength',\n  ENDURANCE = 'Endurance',\n  PSIONICS = 'Psionics',\n  AGILITY = 'Agility',\n  CYBER = 'Cybernetic Affinity',\n}\n","export enum Techs {\n  HACKING = 'Hacking',\n  REPAIR = 'Repair',\n  MODIFY = 'Modify',\n  MAINTENANCE = 'Maintenance',\n  RESEARCH = 'Research',\n}\n","import { Jobs } from '../constants/Jobs';\nimport produce from 'immer';\nimport { Weapons } from '../constants/Weapons';\nimport { WeaponCosts } from '../constants/WeaponCosts';\nimport { Stats } from '../constants/Stats';\nimport { StatCosts } from '../constants/StatCosts';\nimport { Techs } from '../constants/Techs';\nimport { TechCosts } from '../constants/TechCosts';\nimport { PsiTierCosts } from '../constants/PsiTierCosts';\nimport { PsiAbilityCosts } from '../constants/PsiAbilityCosts';\nimport { StoreState } from '../store/Store';\nimport { Difficulty } from '../constants/Difficulty';\n\ninterface JobTrait {\n  label: string;\n  stateMod: (state: StoreState) => StoreState;\n  costMod: (difficulty: Difficulty) => number;\n}\n\ntype JobTraitGroup = {\n  [key in Jobs]: JobTrait[][];\n};\n\nfunction addAbility(abilities: string[], ability: string) {\n  if (!abilities.includes(ability)) {\n    abilities.push(ability);\n  }\n}\n\nexport const JobTraitGroups: JobTraitGroup = {\n  [Jobs.MARINE]: [\n    [\n      {\n        label: '+1 Standard Weapons',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.weapons[Weapons.STANDARD] = Math.max(draftState.weapons[Weapons.STANDARD], 1);\n          }),\n        costMod: (difficulty) => WeaponCosts[difficulty][0],\n      },\n    ],\n    [\n      {\n        label: '+2 Strength',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.stats[Stats.STRENGTH] = Math.max(draftState.stats[Stats.STRENGTH], 3);\n          }),\n        costMod: (difficulty) => StatCosts[difficulty][0] + StatCosts[difficulty][1],\n      },\n      {\n        label: '+2 Endurance',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.stats[Stats.ENDURANCE] = Math.max(draftState.stats[Stats.ENDURANCE], 3);\n          }),\n        costMod: (difficulty) => StatCosts[difficulty][0] + StatCosts[difficulty][1],\n      },\n      {\n        label: '+2 Agility',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.stats[Stats.AGILITY] = Math.max(draftState.stats[Stats.AGILITY], 3);\n          }),\n        costMod: (difficulty) => StatCosts[difficulty][0] + StatCosts[difficulty][1],\n      },\n    ],\n    [\n      {\n        label: '+1 Cybernetic Affinity, +1 Energy Weapons',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.stats[Stats.CYBER] = Math.max(draftState.stats[Stats.CYBER], 2);\n            draftState.weapons[Weapons.ENERGY] = Math.max(draftState.weapons[Weapons.ENERGY], 1);\n          }),\n        costMod: (difficulty) => StatCosts[difficulty][0] + WeaponCosts[difficulty][0],\n      },\n      {\n        label: '+1 Cybernetic Affinity, +1 Heavy Weapons',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.stats[Stats.CYBER] = Math.max(draftState.stats[Stats.CYBER], 2);\n            draftState.weapons[Weapons.HEAVY] = Math.max(draftState.weapons[Weapons.HEAVY], 1);\n          }),\n        costMod: (difficulty) => StatCosts[difficulty][0] + WeaponCosts[difficulty][0],\n      },\n      {\n        label: '+2 Standard Weapons',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.weapons[Weapons.STANDARD] = Math.max(draftState.weapons[Weapons.STANDARD], 3);\n          }),\n        costMod: (difficulty) => WeaponCosts[difficulty][1] + WeaponCosts[difficulty][2],\n      },\n    ],\n    [\n      {\n        label: '+1 Maintenance',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.techs[Techs.MAINTENANCE] = Math.max(draftState.techs[Techs.MAINTENANCE], 1);\n          }),\n        costMod: (difficulty) => TechCosts[difficulty][0],\n      },\n      {\n        label: '+1 Modify',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.techs[Techs.MODIFY] = Math.max(draftState.techs[Techs.MODIFY], 1);\n          }),\n        costMod: (difficulty) => TechCosts[difficulty][0],\n      },\n      {\n        label: '+1 Repair',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.techs[Techs.REPAIR] = Math.max(draftState.techs[Techs.REPAIR], 1);\n          }),\n        costMod: (difficulty) => TechCosts[difficulty][0],\n      },\n    ],\n  ],\n  [Jobs.NAVY]: [\n    [\n      {\n        label: '+1 Standard Weapons',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.weapons[Weapons.STANDARD] = Math.max(draftState.weapons[Weapons.STANDARD], 1);\n          }),\n        costMod: (difficulty) => WeaponCosts[difficulty][0],\n      },\n    ],\n    [\n      {\n        label: '+1 Hacking, +1 Strength',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.stats[Stats.STRENGTH] = Math.max(draftState.stats[Stats.STRENGTH], 2);\n            draftState.techs[Techs.HACKING] = Math.max(draftState.techs[Techs.HACKING], 1);\n          }),\n        costMod: (difficulty) => StatCosts[difficulty][0] + TechCosts[difficulty][0],\n      },\n      {\n        label: '+1 Repair, +1 Strength',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.stats[Stats.STRENGTH] = Math.max(draftState.stats[Stats.STRENGTH], 2);\n            draftState.techs[Techs.REPAIR] = Math.max(draftState.techs[Techs.REPAIR], 1);\n          }),\n        costMod: (difficulty) => StatCosts[difficulty][0] + TechCosts[difficulty][0],\n      },\n      {\n        label: '+1 Modify, +1 Strength',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.stats[Stats.STRENGTH] = Math.max(draftState.stats[Stats.STRENGTH], 2);\n            draftState.techs[Techs.MODIFY] = Math.max(draftState.techs[Techs.MODIFY], 1);\n          }),\n        costMod: (difficulty) => StatCosts[difficulty][0] + TechCosts[difficulty][0],\n      },\n    ],\n    [\n      {\n        label: '+2 Cybernetic Affinity',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.stats[Stats.CYBER] = Math.max(draftState.stats[Stats.CYBER], 3);\n          }),\n        costMod: (difficulty) => StatCosts[difficulty][0] + StatCosts[difficulty][1],\n      },\n      {\n        label: '+1 Maintenance',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.techs[Techs.MAINTENANCE] = Math.max(draftState.techs[Techs.MAINTENANCE], 1);\n          }),\n        costMod: (difficulty) => TechCosts[difficulty][0],\n      },\n      {\n        label: '+2 Standard Weapons',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.weapons[Weapons.STANDARD] = Math.max(draftState.weapons[Weapons.STANDARD], 3);\n          }),\n        costMod: (difficulty) => WeaponCosts[difficulty][1] + WeaponCosts[difficulty][2],\n      },\n    ],\n    [\n      {\n        label: '+1 Research',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.techs[Techs.RESEARCH] = Math.max(draftState.techs[Techs.RESEARCH], 1);\n          }),\n        costMod: (difficulty) => TechCosts[difficulty][0],\n      },\n      {\n        label: '+2 Endurance',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.stats[Stats.ENDURANCE] = Math.max(draftState.stats[Stats.ENDURANCE], 3);\n          }),\n        costMod: (difficulty) => StatCosts[difficulty][0] + StatCosts[difficulty][1],\n      },\n      {\n        label: '+2 Agility',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.stats[Stats.AGILITY] = Math.max(draftState.stats[Stats.AGILITY], 3);\n          }),\n        costMod: (difficulty) => StatCosts[difficulty][0] + StatCosts[difficulty][1],\n      },\n    ],\n  ],\n  [Jobs.OSA]: [\n    [\n      {\n        label: 'Tier One Psionic Disciplines',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.tiers[0].enabled = true;\n          }),\n        costMod: (difficulty) => PsiTierCosts[difficulty][0],\n      },\n    ],\n    [\n      {\n        label: 'Tier Two Psionic Disciplines, Projected Cryokinesis, Psychogenic Cyber Affinity',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.tiers[1].enabled = true;\n            addAbility(draftState.tiers[0].abilities, 'Projected Cryokinesis');\n            addAbility(draftState.tiers[0].abilities, 'Psychogenic Cyber Affinity');\n          }),\n        costMod: (difficulty) => PsiTierCosts[difficulty][1] + PsiAbilityCosts[difficulty][0] * 2,\n      },\n      {\n        label: 'Tier Two Psionic Disciplines, Projected Cryokinesis, Kinetic Redirection',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.tiers[1].enabled = true;\n            addAbility(draftState.tiers[0].abilities, 'Projected Cryokinesis');\n            addAbility(draftState.tiers[0].abilities, 'Kinetic Redirection');\n          }),\n        costMod: (difficulty) => PsiTierCosts[difficulty][1] + PsiAbilityCosts[difficulty][0] * 2,\n      },\n      {\n        label: 'Tier Two Psionic Disciplines, Projected Cryokinesis, Psycho-Reflective Screen',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.tiers[1].enabled = true;\n            addAbility(draftState.tiers[0].abilities, 'Projected Cryokinesis');\n            addAbility(draftState.tiers[0].abilities, 'Psycho-Reflective Screen');\n          }),\n        costMod: (difficulty) => PsiTierCosts[difficulty][1] + PsiAbilityCosts[difficulty][0] * 2,\n      },\n    ],\n    [\n      {\n        label: '+2 Psionic Ability',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.stats[Stats.PSIONICS] = Math.max(draftState.stats[Stats.PSIONICS], 3);\n          }),\n        costMod: (difficulty) => StatCosts[difficulty][0] + StatCosts[difficulty][1],\n      },\n      {\n        label: '+1 Research',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.techs[Techs.RESEARCH] = Math.max(draftState.techs[Techs.RESEARCH], 1);\n          }),\n        costMod: (difficulty) => TechCosts[difficulty][0],\n      },\n      {\n        label: '+2 Endurance',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.stats[Stats.ENDURANCE] = Math.max(draftState.stats[Stats.ENDURANCE], 3);\n          }),\n        costMod: (difficulty) => StatCosts[difficulty][0] + StatCosts[difficulty][1],\n      },\n    ],\n    [\n      {\n        label: '+1 Strength, +1 Agility, +1 Cybernetic Affinity, Psychogenic Agility',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.stats[Stats.STRENGTH] = Math.max(draftState.stats[Stats.STRENGTH], 2);\n            draftState.stats[Stats.AGILITY] = Math.max(draftState.stats[Stats.AGILITY], 2);\n            draftState.stats[Stats.CYBER] = Math.max(draftState.stats[Stats.CYBER], 2);\n            addAbility(draftState.tiers[0].abilities, 'Psychogenic Agility');\n          }),\n        costMod: (difficulty) => StatCosts[difficulty][0] * 3 + PsiAbilityCosts[difficulty][0],\n      },\n      {\n        label: '+1 Strength, +1 Agility, +1 Cybernetic Affinity, Neuro-Reflex Dampening',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.stats[Stats.STRENGTH] = Math.max(draftState.stats[Stats.STRENGTH], 2);\n            draftState.stats[Stats.AGILITY] = Math.max(draftState.stats[Stats.AGILITY], 2);\n            draftState.stats[Stats.CYBER] = Math.max(draftState.stats[Stats.CYBER], 2);\n            addAbility(draftState.tiers[0].abilities, 'Neuro-Reflex Dampening');\n          }),\n        costMod: (difficulty) => StatCosts[difficulty][0] * 3 + PsiAbilityCosts[difficulty][0],\n      },\n      {\n        label: '+1 Strength, +1 Agility, +1 Cybernetic Affinity, Remote Electron Tampering',\n        stateMod: (state) =>\n          produce(state, (draftState) => {\n            draftState.stats[Stats.STRENGTH] = Math.max(draftState.stats[Stats.STRENGTH], 2);\n            draftState.stats[Stats.AGILITY] = Math.max(draftState.stats[Stats.AGILITY], 2);\n            draftState.stats[Stats.CYBER] = Math.max(draftState.stats[Stats.CYBER], 2);\n            addAbility(draftState.tiers[0].abilities, 'Remote Electron Tampering');\n          }),\n        costMod: (difficulty) => StatCosts[difficulty][0] * 3 + PsiAbilityCosts[difficulty][0],\n      },\n    ],\n  ],\n};\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { StoreState } from '../store/Store';\nimport { PsiTierCosts } from '../constants/PsiTierCosts';\nimport { PsiAbilityCosts } from '../constants/PsiAbilityCosts';\nimport { StatCosts } from '../constants/StatCosts';\nimport { WeaponCosts } from '../constants/WeaponCosts';\nimport { TechCosts } from '../constants/TechCosts';\nimport { JobTraitGroups } from '../lib/JobTraitGroups';\n\nexport function Total() {\n  const difficulty = useSelector((state: StoreState) => state.difficulty);\n  const stats = useSelector((state: StoreState) => state.stats);\n  const weapons = useSelector((state: StoreState) => state.weapons);\n  const tiers = useSelector((state: StoreState) => state.tiers);\n  const techs = useSelector((state: StoreState) => state.techs);\n  const jobTraits = useSelector((state: StoreState) => state.jobTraits);\n  const discount = useMemo(\n    () =>\n      jobTraits.traits.reduce((total, traitLabel, i) => {\n        if (traitLabel) {\n          const trait = JobTraitGroups[jobTraits.job][i].find((trait) => trait.label === traitLabel);\n          if (trait) {\n            total -= trait.costMod(difficulty);\n          } else {\n            console.warn(`sanity check: trait \"${traitLabel}\" did not exist for ${jobTraits.job} in year ${i}`);\n          }\n        }\n        return total;\n      }, 0),\n    [jobTraits]\n  );\n  const psiCosts = useMemo(\n    () =>\n      tiers.reduce(\n        (total, tier, i) =>\n          total +\n          (tier.enabled ? PsiTierCosts[difficulty][i] : 0) +\n          tier.abilities.length * PsiAbilityCosts[difficulty][i],\n        0\n      ),\n    [tiers]\n  );\n  const statCosts = useMemo(\n    () =>\n      Object.values(stats).reduce(\n        (total, stat) => total + StatCosts[difficulty].slice(0, stat - 1).reduce((t, c) => t + c, 0),\n        0\n      ),\n    [stats]\n  );\n  const weaponCosts = useMemo(\n    () =>\n      Object.values(weapons).reduce(\n        (total, weapon) => total + WeaponCosts[difficulty].slice(0, weapon).reduce((t, c) => t + c, 0),\n        0\n      ),\n    [weapons]\n  );\n  const techCosts = useMemo(\n    () =>\n      Object.values(techs).reduce(\n        (total, tech) => total + TechCosts[difficulty].slice(0, tech).reduce((t, c) => t + c, 0),\n        0\n      ),\n    [techs]\n  );\n  return (\n    <div\n      style={{\n        display: 'grid',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        gridTemplateColumns: '2fr 1fr',\n        gap: 4,\n      }}\n    >\n      <span>\n        <h2>Total</h2>\n      </span>\n      <span>{discount + psiCosts + statCosts + weaponCosts + techCosts}</span>\n    </div>\n  );\n}\n","import { Stats as Values } from '../../constants/Stats';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport const Stats = createSlice({\n  name: 'Stats',\n  initialState: {\n    [Values.STRENGTH]: 1,\n    [Values.ENDURANCE]: 1,\n    [Values.PSIONICS]: 1,\n    [Values.AGILITY]: 1,\n    [Values.CYBER]: 1,\n  },\n  reducers: {\n    setStat: (state, { payload: { stat, value } }: PayloadAction<{ stat: Values; value: number }>) => {\n      state[stat] = Math.floor(Math.max(1, Math.min(6, value)));\n    },\n  },\n});\n","import { useDispatch, useSelector } from 'react-redux';\nimport { StoreState } from '../store/Store';\nimport React from 'react';\nimport { Stats as Values } from '../constants/Stats';\nimport { Stats as Slice } from '../store/slices/Stats';\nimport { StatCosts } from '../constants/StatCosts';\n\nexport function StatLine({ stat, value }: { stat: Values; value: number }) {\n  const dispatch = useDispatch();\n  const difficulty = useSelector((state: StoreState) => state.difficulty);\n  return (\n    <>\n      <span>{stat}</span>\n      <span>\n        <input\n          value={value}\n          min={1}\n          max={6}\n          type='number'\n          onChange={(e) => dispatch(Slice.actions.setStat({ stat, value: +e.target.value }))}\n        />\n      </span>\n      <span>{value !== 6 ? StatCosts[difficulty][value - 1] : 'max'}</span>\n    </>\n  );\n}\n\nexport function Stats() {\n  const stats = useSelector((state: StoreState) => state.stats);\n  return (\n    <div\n      style={{\n        display: 'grid',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        gridTemplateColumns: '4fr 2fr 1fr',\n        gap: 4,\n      }}\n    >\n      <h2 style={{ gridColumn: '1 / 4' }}>Stats</h2>\n      <span>Skill</span>\n      <span>Level</span>\n      <span>Cost</span>\n      <StatLine stat={Values.STRENGTH} value={stats[Values.STRENGTH]} />\n      <StatLine stat={Values.ENDURANCE} value={stats[Values.ENDURANCE]} />\n      <StatLine stat={Values.PSIONICS} value={stats[Values.PSIONICS]} />\n      <StatLine stat={Values.AGILITY} value={stats[Values.AGILITY]} />\n      <StatLine stat={Values.CYBER} value={stats[Values.CYBER]} />\n    </div>\n  );\n}\n","import { Weapons as Values } from '../../constants/Weapons';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport const Weapons = createSlice({\n  name: 'Weapons',\n  initialState: {\n    [Values.STANDARD]: 0,\n    [Values.ENERGY]: 0,\n    [Values.HEAVY]: 0,\n    [Values.EXOTIC]: 0,\n  },\n  reducers: {\n    setWeapon: (state, { payload: { weapon, value } }: PayloadAction<{ weapon: Values; value: number }>) => {\n      state[weapon] = Math.floor(Math.max(0, Math.min(6, value)));\n    },\n  },\n});\n","import { useDispatch, useSelector } from 'react-redux';\nimport { StoreState } from '../store/Store';\nimport React from 'react';\nimport { Weapons as Values } from '../constants/Weapons';\nimport { Weapons as Slice } from '../store/slices/Weapons';\nimport { WeaponCosts } from '../constants/WeaponCosts';\n\nexport function WeaponLine({ weapon, value }: { weapon: Values; value: number }) {\n  const dispatch = useDispatch();\n  const difficulty = useSelector((state: StoreState) => state.difficulty);\n  return (\n    <>\n      <span style={{ gridColumn: 1 }}>{weapon}</span>\n      <span style={{ gridColumn: 2 }}>\n        <input\n          value={value}\n          min={0}\n          max={6}\n          type='number'\n          onChange={(e) => dispatch(Slice.actions.setWeapon({ weapon, value: +e.target.value }))}\n        />\n      </span>\n      <span style={{ gridColumn: 3 }}>{value !== 6 ? WeaponCosts[difficulty][value] : 'max'}</span>\n    </>\n  );\n}\n\nexport function Weapons() {\n  const weapons = useSelector((state: StoreState) => state.weapons);\n  return (\n    <div style={{ display: 'grid', alignItems: 'center', justifyContent: 'space-around', gap: 4 }}>\n      <h2>Weapons</h2>\n      <span style={{ gridColumn: 1 }}>Skill</span>\n      <span style={{ gridColumn: 2 }}>Level</span>\n      <span style={{ gridColumn: 3 }}>Cost</span>\n      <WeaponLine weapon={Values.STANDARD} value={weapons[Values.STANDARD]} />\n      <WeaponLine weapon={Values.ENERGY} value={weapons[Values.ENERGY]} />\n      <WeaponLine weapon={Values.HEAVY} value={weapons[Values.HEAVY]} />\n      <WeaponLine weapon={Values.EXOTIC} value={weapons[Values.EXOTIC]} />\n    </div>\n  );\n}\n","import { Techs as Values } from '../../constants/Techs';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport const Techs = createSlice({\n  name: 'Techs',\n  initialState: {\n    [Values.HACKING]: 0,\n    [Values.REPAIR]: 0,\n    [Values.MODIFY]: 0,\n    [Values.MAINTENANCE]: 0,\n    [Values.RESEARCH]: 0,\n  },\n  reducers: {\n    setTech: (state, { payload: { tech, value } }: PayloadAction<{ tech: Values; value: number }>) => {\n      state[tech] = Math.floor(Math.max(0, Math.min(6, value)));\n    },\n  },\n});\n","import { useDispatch, useSelector } from 'react-redux';\nimport { StoreState } from '../store/Store';\nimport React from 'react';\nimport { Techs as Values } from '../constants/Techs';\nimport { Techs as Slice } from '../store/slices/Techs';\nimport { TechCosts } from '../constants/TechCosts';\n\nexport function TechLine({ tech, value }: { tech: Values; value: number }) {\n  const dispatch = useDispatch();\n  const difficulty = useSelector((state: StoreState) => state.difficulty);\n  return (\n    <>\n      <span>{tech}</span>\n      <span>\n        <input\n          value={value}\n          min={0}\n          max={6}\n          type='number'\n          onChange={(e) => dispatch(Slice.actions.setTech({ tech: tech, value: +e.target.value }))}\n        />\n      </span>\n      <span>{value !== 6 ? TechCosts[difficulty][value] : 'max'}</span>\n    </>\n  );\n}\n\nexport function Techs() {\n  const techs = useSelector((state: StoreState) => state.techs);\n  return (\n    <div\n      style={{\n        display: 'grid',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        gridTemplateColumns: '4fr 2fr 1fr',\n        gap: 4,\n      }}\n    >\n      <h2 style={{ gridColumn: '1 / 4' }}>Techs</h2>\n      <span>Skill</span>\n      <span>Level</span>\n      <span>Cost</span>\n      <TechLine tech={Values.HACKING} value={techs[Values.HACKING]} />\n      <TechLine tech={Values.REPAIR} value={techs[Values.REPAIR]} />\n      <TechLine tech={Values.MODIFY} value={techs[Values.MODIFY]} />\n      <TechLine tech={Values.MAINTENANCE} value={techs[Values.MAINTENANCE]} />\n      <TechLine tech={Values.RESEARCH} value={techs[Values.RESEARCH]} />\n    </div>\n  );\n}\n","import { Jobs } from '../../constants/Jobs';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { JobTraitGroups } from '../../lib/JobTraitGroups';\n\ntype JobTraitsState = {\n  job: Jobs;\n  traits: string[];\n};\n\nconst InitialState: JobTraitsState = {\n  job: Jobs.MARINE,\n  traits: [JobTraitGroups[Jobs.MARINE][0][0].label, '', '', ''],\n};\n\nexport const JobTraits = createSlice({\n  name: 'JobTraits',\n  initialState: InitialState,\n  reducers: {\n    setJob: (state, { payload }: PayloadAction<Jobs>) => {\n      state.job = payload;\n      state.traits = [JobTraitGroups[payload][0][0].label, '', '', ''];\n    },\n    setTrait: (state, { payload: { year, trait } }: PayloadAction<{ year: number; trait: string }>) => {\n      state.traits[year] = trait;\n    },\n  },\n});\n","import { useDispatch, useSelector } from 'react-redux';\nimport { StoreState } from '../store/Store';\nimport { JobTraits } from '../store/slices/JobTraits';\nimport { Jobs as Values } from '../constants/Jobs';\nimport React from 'react';\nimport { JobTraitGroups } from '../lib/JobTraitGroups';\n\nexport function Jobs() {\n  const { job, traits } = useSelector((state: StoreState) => state.jobTraits);\n  const difficulty = useSelector((state: StoreState) => state.difficulty);\n  const dispatch = useDispatch();\n  return (\n    <div\n      style={{\n        display: 'grid',\n        alignItems: 'center',\n        justifyContent: 'space-evenly',\n        gridTemplateColumns: '1fr 2fr',\n        gap: 4,\n      }}\n    >\n      <span>\n        <h2>Job</h2>\n      </span>\n      <span>\n        <select onChange={(e) => dispatch(JobTraits.actions.setJob(e.target.value as Values))} defaultValue={job}>\n          {Object.entries(Values).map(([k, v]) => (\n            <option key={k} value={v}>\n              {v}\n            </option>\n          ))}\n        </select>\n      </span>\n      <span>Year 0</span>\n      <span>\n        {traits[0]} ({JobTraitGroups[job][0][0].costMod(difficulty)})\n      </span>\n      {traits.slice(1).map((trait, i) => (\n        <React.Fragment key={i}>\n          <span>Year {i + 1}</span>\n          <span>\n            <select\n              defaultValue={trait}\n              onChange={(e) => dispatch(JobTraits.actions.setTrait({ year: i + 1, trait: e.target.value }))}\n            >\n              <option value=''>---</option>\n              {JobTraitGroups[job][i + 1].map((choice) => (\n                <option key={choice.label} value={choice.label}>\n                  {choice.label} ({choice.costMod(difficulty)})\n                </option>\n              ))}\n            </select>\n          </span>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\n// import { Breakpoints } from './views/Breakpoints';\nimport { PsiGrid } from './views/PsiGrid';\nimport { Difficulty } from './views/Difficulty';\nimport { Total } from './views/Total';\nimport { Stats } from './views/Stats';\nimport { Weapons } from './views/Weapons';\nimport { Techs } from './views/Techs';\nimport { Jobs } from './views/Jobs';\n\nfunction App() {\n  return (\n    <div>\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)', gap: '12px', margin: '0 12px' }}>\n        <Total />\n        <Difficulty />\n        <Jobs />\n      </div>\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)', gap: '12px', margin: '0 12px' }}>\n        <Stats />\n        <Weapons />\n        <Techs />\n      </div>\n      <PsiGrid />\n      {/*<Breakpoints />*/}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nfunction s(a: number, b: number) {\n  return a - b;\n}\n\nexport const Breakpoints = createSlice({\n  name: 'Breakpoints',\n  initialState: [] as number[],\n  reducers: {\n    add: (state, action: PayloadAction<number>) =>\n      state.includes(action.payload) ? state : state.concat(action.payload).sort(s),\n    remove: (state, action: PayloadAction<number>) => state.filter((b) => b !== action.payload),\n  },\n});\n","import { createStore, combineReducers } from 'redux';\nimport { Breakpoints } from './slices/Breakpoints';\nimport { PsiTiers } from './slices/PsiTiers';\nimport { Difficulty } from './slices/Difficulty';\nimport { Stats } from './slices/Stats';\nimport { Weapons } from './slices/Weapons';\nimport { Techs } from './slices/Techs';\nimport { JobTraits } from './slices/JobTraits';\nimport { JobTraitGroups } from '../lib/JobTraitGroups';\n\nconst reducer = combineReducers({\n  breakpoints: Breakpoints.reducer,\n  tiers: PsiTiers.reducer,\n  difficulty: Difficulty.reducer,\n  stats: Stats.reducer,\n  weapons: Weapons.reducer,\n  techs: Techs.reducer,\n  jobTraits: JobTraits.reducer,\n});\n\nconst jobModifiers: typeof reducer = (state, action) => {\n  state = reducer(state, action);\n  state = state.jobTraits.traits.reduce((state, traitLabel, i) => {\n    if (traitLabel) {\n      const trait = JobTraitGroups[state.jobTraits.job][i].find((trait) => trait.label === traitLabel);\n      if (trait) {\n        state = trait.stateMod(state);\n      } else {\n        console.warn(`sanity check: trait \"${traitLabel}\" did not exist for ${state.jobTraits.job} in year ${i}`);\n      }\n    }\n    return state;\n  }, state);\n  return state;\n};\n\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nconst saveState = (state: StoreState) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n\nexport const store = createStore(jobModifiers, loadState());\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nexport type StoreState = ReturnType<typeof store.getState>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store/Store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}